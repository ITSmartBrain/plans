1. Сделать меню в цикле в задаче с телефонами
2. В крестиках ноликах:
- доделать toString в классе Board
- сделать проверку на занятость ячейки, чтобы нельзя было сходить в занятую ячейку
- добавить специальную возможностью компьютеру менять одну ячейку на свою, даже если она уже занята соперником
- сделать проверку на выход за границы массива (когда пользователь вводит с консоли координаты ячеек)
- если пользователь вводит неверные координаты - программа должна об этом сказать и попросить ввести еще раз и так пока он не введет верные координаты (это касается выхода за границы массива или ввода букв вместо чисел)
- продумать завершение игры (победа/ничья)
- добавить человеку еще одну возможность, например, ходить сразу в две клетки
- добавить третий тип игрока: ComputerKiller (компьютер убийца), единственная цель которого - удалять вражеские ячейки. Например, если играет Human vs ComputerKiller:
Человек делает ход
ComputerKiller пытается очистить ячейку, в которую сходил человек
Попытку очистки можно сделать любым способом. Продумать этот способ. 
Стандартный ход ComputerKiller - очистить одну ячейку.
Суперспособность - очистить за один ход от 2 до 3 ячеек







###
Создать класс Fruit(фрукт) с private полями:
- название (длина строки больше нуля)
- стоимость (больше нуля)
- польза (по пятибальной шкале) (от 1 до 5 включительно)


Создать конструктор для инициализации полей и геттеры с сеттерами.
Создать метод isCorrect() - возвращает true, если все поля заполнены правильно. Иначе возвращает false.
Создать метод print, выводящий на консоль значения полей

Поля должны быть защищены от некорректных значений. Требования к полям указаны выше.
Как проверить длину строки? Любая строка представлена классом String, поэтому у любой строки есть метод length(), возвращающий ее длину.
Например,
String val = "hello world";
System.out.println(val.length()); //получим 11 на консоли

В мейне создать массив на 5 элементов типа Fruit и заполнить каждый элемент значениями с консоли
После заполнения пройтись по массиву и всем элементам, которые остались не заполненными из-за некорректного ввода, присвоить значения null.
К примеру, если я ввел следующие значения:
arr[0] = new Fruit("apple", -10, -10);
то этот элемент должен быть приравнен к null, так как он содержит незаполнненые поля (у полей останутся значения по умолчанию) из-за некорректных данных.
arr[0] = null;

После этого вывести на консоль только заполненные фрукты через метод print;


###

Представим ситуацию, когда ученик сдает экзамен и должен выбрать билет под определенным номером.
Наш студент плохо готовился к экзамену и не знает количество билетов, поэтому вполне возможна ситуация, когда он выберет такой номер билета, которого не существует.

Создать класс Question(билет) с private полями:
номер билета
текст билета

Подсчет количества баллов

##########3
Можно писать свой код. Геттеры и сеттеры по необходимости
Создать фильтр нецензурных комментариев под постом.
Нецензурным считается комментарий, равный строке "нецензурный комментарий". Все остальные считаются нормальными.

Представить комментарий классом Comment с private полями
комментарий
автор

Создать конструктор для инициализации полей

Создать класс Post с private полями
автор поста (В виде объекта)
текст поста
массив комментариев

Создать конструктор для иницализации полей

В мейне создать массив постов на 5 элементов и заполнить его значениями. Заполнение значениями должно быть возможно, используя, любой способ без изменения кода класса Post. Например, через ввод с консоли или random и проч.

После заполнения очистить все посты от нецензурных комментариев, приравняв элементы массива с нецензурными комментариями к null. 
Вывести на консоль все посты и комментарии под ними
Найти самый популярный пост. (с наибольшим числом нормальных комментариев)